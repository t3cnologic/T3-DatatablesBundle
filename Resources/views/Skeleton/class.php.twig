<?php

namespace {{ namespace }}\Datatables{{ entity_namespace ? '\\' ~ entity_namespace : '' }};

{% block use_statements %}
use T3\DatatablesBundle\Datatable\View\AbstractDatatableView;
{% endblock use_statements %}

{% block class_definition %}
/**
 * Class {{ datatable_class }}
 *
 * @package {{ namespace }}\Datatables{{ entity_namespace ? '\\' ~ entity_namespace : '' }}
 */
class {{ datatable_class }} extends AbstractDatatableView
{% endblock class_definition %}
{
{% block class_body %}
    /**
     * {@inheritdoc}
     */
    public function buildDatatableView()
    {
        $this->getFeatures()
            {% if false == client_side %}
            ->setServerSide(true)
            {% else %}
            ->setServerSide(false)
            {% endif %}
            ->setProcessing(true);

        {% if '' != ajax_url %}
        $this->getAjax()->setUrl($this->getRouter()->generate('{{ ajax_url }}'));
        {% endif %}

        $this->setStyle({{ style }});

        {% if true == individual_filtering %}
        $this->setIndividualFiltering(true);
        {% endif %}

        $this->getColumnBuilder()
        {% for field in fields %}
        ->add('{{ field.property }}', '{{ field.column_name }}', array('title' => '{{ field.title }}',))
        {% endfor %}
        ;
    }

    /**
     * {@inheritdoc}
     */
    public function getEntity()
    {
        return '{{ namespace }}\Entity{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\{{ entity_class }}';
    }

    /**
     * {@inheritdoc}
     */
    public function getName()
    {
        return '{{ datatable_name }}';
    }
{% endblock class_body %}
}
